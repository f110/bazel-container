load("@rules_pkg//:pkg.bzl", "pkg_tar")
load("@io_bazel_rules_docker//docker/package_managers:download_pkgs.bzl", "download_pkgs")
load("//toolchain_container:toolchain_container.bzl", "toolchain_container")
load("@io_bazel_rules_docker//container:container.bzl", "container_bundle", "container_image")
load("@io_bazel_rules_docker//contrib:push-all.bzl", "container_push")

download_pkgs(
    name = "dep_pkgs",
    image_tar = "@debian11//image",
    packages = [
        "build-essential",
        "ca-certificates",
        "git",
        "libstdc++-10-dev",
        "python",
        "python3",
        "python3-distutils",
    ],
)

pkg_tar(
    name = "bazelisk_bin",
    files = {
        "@bazelisk//file": "/usr/local/bin/bazel",
    },
    mode = "0755",
)

toolchain_container(
    name = "base_layer",
    base = "@debian11//image",
    installables_tar = "@dep_pkgs//file",
)

container_image(
    name = "bazelisk",
    base = ":base_layer",
    entrypoint = ["/usr/local/bin/bazel"],
    labels = {
        "org.opencontainers.image.source": "https://github.com/f110/bazel-container",
    },
    tars = [
        ":bazelisk_bin",
    ],
)

load(":bazel.bzl", "bazels")

bazels()

IMAGES = {
    "ghcr.io/f110/bazel-container:bazelisk": ":bazelisk",
}

load(":versions.bzl", "VERSIONS")

IMAGES.update({
    "ghcr.io/f110/bazel-container:" + x[0]: "bazel_" + x[0].replace(".", "_")
    for x in VERSIONS
})

container_bundle(
    name = "all",
    images = IMAGES,
)

container_push(
    name = "publish",
    bundle = ":all",
    format = "Docker",
    sequential = True,
)
